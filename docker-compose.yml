services:
  # PostgreSQL service
  db:
    image: postgres:17
    container_name: postgres-container
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./backup.sql:/docker-entrypoint-initdb.d/backup.sql
    networks:
      - app_network

  # Backend service (FastAPI)
  backend:
    build: ./backend
    container_name: backend-container
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - REFRESH_TOKEN_EXPIRE_DAYS=${REFRESH_TOKEN_EXPIRE_DAYS}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - FERNET_SECRET_KEY=${FERNET_SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - app_network

  # Frontend service (React)
  frontend:
    build:
      context: ./frontend
    container_name: frontend-container
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app_network
    depends_on:
      - backend
    command: npm run dev -- --host 0.0.0.0

networks:
  app_network:
    driver: bridge
